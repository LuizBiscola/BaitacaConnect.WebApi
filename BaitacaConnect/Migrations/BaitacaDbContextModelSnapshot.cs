// <auto-generated />
using System;
using BaitacaConnect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BaitacaConnect.Migrations
{
    [DbContext(typeof(BaitacaDbContext))]
    partial class BaitacaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BaitacaConnect.Models.FaunaFlora", b =>
                {
                    b.Property<int>("IdFaunaFlora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_fauna_flora");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFaunaFlora"));

                    b.Property<string>("Caracteristicas")
                        .HasColumnType("jsonb")
                        .HasColumnName("caracteristicas");

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("categoria");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Imagens")
                        .HasColumnType("jsonb")
                        .HasColumnName("imagens");

                    b.Property<string>("NomeCientifico")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nome_cientifico");

                    b.Property<string>("NomePopular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome_popular");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("tipo");

                    b.Property<string>("TrilhasOndeEncontra")
                        .HasColumnType("jsonb")
                        .HasColumnName("trilhas_onde_encontra");

                    b.HasKey("IdFaunaFlora");

                    b.HasIndex("Categoria")
                        .HasDatabaseName("IX_fauna_flora_categoria");

                    b.HasIndex("NomeCientifico")
                        .HasDatabaseName("IX_fauna_flora_nome_cientifico");

                    b.HasIndex("NomePopular")
                        .HasDatabaseName("IX_fauna_flora_nome_popular");

                    b.HasIndex("Tipo")
                        .HasDatabaseName("IX_fauna_flora_tipo");

                    b.ToTable("fauna_flora", (string)null);
                });

            modelBuilder.Entity("BaitacaConnect.Models.Parque", b =>
                {
                    b.Property<int>("IdParque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_parque");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdParque"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<int?>("CapacidadeMaxima")
                        .HasColumnType("integer")
                        .HasColumnName("capacidade_maxima");

                    b.Property<string>("CoordenadasParque")
                        .HasColumnType("text")
                        .HasColumnName("coordenadas_parque");

                    b.Property<string>("DescricaoParque")
                        .HasColumnType("text")
                        .HasColumnName("descricao_parque");

                    b.Property<string>("EnderecoParque")
                        .HasColumnType("text")
                        .HasColumnName("endereco_parque");

                    b.Property<string>("HorarioFuncionamento")
                        .HasColumnType("jsonb")
                        .HasColumnName("horario_funcionamento");

                    b.Property<string>("NomeParque")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome_parque");

                    b.HasKey("IdParque");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_parque_ativo");

                    b.HasIndex("NomeParque")
                        .HasDatabaseName("IX_parque_nome_parque");

                    b.ToTable("parque", (string)null);
                });

            modelBuilder.Entity("BaitacaConnect.Models.PontoInteresse", b =>
                {
                    b.Property<int>("IdParque")
                        .HasColumnType("integer")
                        .HasColumnName("id_parque")
                        .HasColumnOrder(1);

                    b.Property<int>("IdTrilha")
                        .HasColumnType("integer")
                        .HasColumnName("id_trilha")
                        .HasColumnOrder(2);

                    b.Property<string>("Coordenadas")
                        .HasColumnType("text")
                        .HasColumnName("coordenadas");

                    b.Property<string>("DescricaoPontoInteresse")
                        .HasColumnType("text")
                        .HasColumnName("descricao_ponto_interesse");

                    b.Property<string>("NomePontoInteresse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome_ponto_interesse");

                    b.Property<int?>("OrdemNaTrilha")
                        .HasColumnType("integer")
                        .HasColumnName("ordem_na_trilha");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipo");

                    b.HasKey("IdParque", "IdTrilha")
                        .HasName("PK_ponto_interesse");

                    b.HasIndex("IdTrilha");

                    b.HasIndex("OrdemNaTrilha")
                        .HasDatabaseName("IX_ponto_interesse_ordem_na_trilha");

                    b.HasIndex("Tipo")
                        .HasDatabaseName("IX_ponto_interesse_tipo");

                    b.ToTable("ponto_interesse", (string)null);
                });

            modelBuilder.Entity("BaitacaConnect.Models.RelatorioVisita", b =>
                {
                    b.Property<int>("IdRelatorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_relatorio");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRelatorio"));

                    b.Property<int?>("Avaliacao")
                        .HasColumnType("integer")
                        .HasColumnName("avaliacao");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text")
                        .HasColumnName("comentarios");

                    b.Property<DateTime>("DataRelatorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("data_relatorio")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("IdReserva")
                        .HasColumnType("integer")
                        .HasColumnName("id_reserva");

                    b.Property<string>("ProblemasEncontrados")
                        .HasColumnType("text")
                        .HasColumnName("problemas_encontrados");

                    b.HasKey("IdRelatorio");

                    b.HasIndex("Avaliacao")
                        .HasDatabaseName("IX_relatorio_visita_avaliacao");

                    b.HasIndex("DataRelatorio")
                        .HasDatabaseName("IX_relatorio_visita_data_relatorio");

                    b.HasIndex("IdReserva")
                        .HasDatabaseName("IX_relatorio_visita_id_reserva");

                    b.ToTable("relatorio_visita", (string)null);
                });

            modelBuilder.Entity("BaitacaConnect.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_reserva");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdReserva"));

                    b.Property<DateTime?>("CheckIn")
                        .HasColumnType("timestamp")
                        .HasColumnName("check_in");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("timestamp")
                        .HasColumnName("check_out");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DataVisita")
                        .HasColumnType("date")
                        .HasColumnName("data_visita");

                    b.Property<TimeSpan?>("HorarioEntrada")
                        .HasColumnType("time")
                        .HasColumnName("horario_entrada");

                    b.Property<int>("IdParque")
                        .HasColumnType("integer")
                        .HasColumnName("id_parque");

                    b.Property<int?>("IdTrilha")
                        .HasColumnType("integer")
                        .HasColumnName("id_trilha");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<int>("NumeroVisitantes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("numero_visitantes");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("ativa")
                        .HasColumnName("status");

                    b.HasKey("IdReserva");

                    b.HasIndex("DataVisita")
                        .HasDatabaseName("IX_reserva_data_visita");

                    b.HasIndex("IdParque")
                        .HasDatabaseName("IX_reserva_id_parque");

                    b.HasIndex("IdTrilha")
                        .HasDatabaseName("IX_reserva_id_trilha");

                    b.HasIndex("IdUsuario")
                        .HasDatabaseName("IX_reserva_id_usuario");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_reserva_status");

                    b.HasIndex("DataVisita", "Status")
                        .HasDatabaseName("IX_reserva_data_visita_status");

                    b.ToTable("reserva", (string)null);
                });

            modelBuilder.Entity("BaitacaConnect.Models.Trilha", b =>
                {
                    b.Property<int>("IdTrilha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_trilha");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTrilha"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<int?>("CapacidadeMaxima")
                        .HasColumnType("integer")
                        .HasColumnName("capacidade_maxima");

                    b.Property<string>("CoordenadasTrilha")
                        .HasColumnType("jsonb")
                        .HasColumnName("coordenadas_trilha");

                    b.Property<string>("DescricaoTrilha")
                        .HasColumnType("text")
                        .HasColumnName("descricao_trilha");

                    b.Property<string>("DificuldadeTrilha")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("dificuldade_trilha");

                    b.Property<decimal?>("DistanciaKm")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("distancia_km");

                    b.Property<int>("IdParque")
                        .HasColumnType("integer")
                        .HasColumnName("id_parque");

                    b.Property<string>("NomeTrilha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome_trilha");

                    b.Property<int?>("TempoEstimadoMinutos")
                        .HasColumnType("integer")
                        .HasColumnName("tempo_estimado_minutos");

                    b.HasKey("IdTrilha");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_trilha_ativo");

                    b.HasIndex("DificuldadeTrilha")
                        .HasDatabaseName("IX_trilha_dificuldade_trilha");

                    b.HasIndex("IdParque")
                        .HasDatabaseName("IX_trilha_id_parque");

                    b.ToTable("trilha", (string)null);
                });

            modelBuilder.Entity("BaitacaConnect.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email_usuario");

                    b.Property<int?>("IdadeUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("idade_usuario");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome_usuario");

                    b.Property<string>("SenhaUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("senha_usuario");

                    b.Property<string>("TelefoneUsuario")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefone_usuario");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("visitante")
                        .HasColumnName("tipo_usuario");

                    b.HasKey("IdUsuario");

                    b.HasIndex("EmailUsuario")
                        .IsUnique()
                        .HasDatabaseName("IX_usuario_email_usuario");

                    b.HasIndex("TipoUsuario")
                        .HasDatabaseName("IX_usuario_tipo_usuario");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("BaitacaConnect.Models.PontoInteresse", b =>
                {
                    b.HasOne("BaitacaConnect.Models.Parque", "Parque")
                        .WithMany("PontosInteresse")
                        .HasForeignKey("IdParque")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ponto_interesse_parque");

                    b.HasOne("BaitacaConnect.Models.Trilha", "Trilha")
                        .WithMany("PontosInteresse")
                        .HasForeignKey("IdTrilha")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ponto_interesse_trilha");

                    b.Navigation("Parque");

                    b.Navigation("Trilha");
                });

            modelBuilder.Entity("BaitacaConnect.Models.RelatorioVisita", b =>
                {
                    b.HasOne("BaitacaConnect.Models.Reserva", "Reserva")
                        .WithMany("RelatoriosVisita")
                        .HasForeignKey("IdReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_relatorio_visita_reserva");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("BaitacaConnect.Models.Reserva", b =>
                {
                    b.HasOne("BaitacaConnect.Models.Parque", "Parque")
                        .WithMany("Reservas")
                        .HasForeignKey("IdParque")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_reserva_parque");

                    b.HasOne("BaitacaConnect.Models.Trilha", "Trilha")
                        .WithMany("Reservas")
                        .HasForeignKey("IdTrilha")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_reserva_trilha");

                    b.HasOne("BaitacaConnect.Models.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_reserva_usuario");

                    b.Navigation("Parque");

                    b.Navigation("Trilha");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BaitacaConnect.Models.Trilha", b =>
                {
                    b.HasOne("BaitacaConnect.Models.Parque", "Parque")
                        .WithMany("Trilhas")
                        .HasForeignKey("IdParque")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_trilha_parque");

                    b.Navigation("Parque");
                });

            modelBuilder.Entity("BaitacaConnect.Models.Parque", b =>
                {
                    b.Navigation("PontosInteresse");

                    b.Navigation("Reservas");

                    b.Navigation("Trilhas");
                });

            modelBuilder.Entity("BaitacaConnect.Models.Reserva", b =>
                {
                    b.Navigation("RelatoriosVisita");
                });

            modelBuilder.Entity("BaitacaConnect.Models.Trilha", b =>
                {
                    b.Navigation("PontosInteresse");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("BaitacaConnect.Models.Usuario", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
